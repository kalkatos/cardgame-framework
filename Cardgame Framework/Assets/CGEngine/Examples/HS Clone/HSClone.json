{"cardgameID":"HSClone","gameVariableNames":["HPP1","HPP2","ManaP1","MaxManaP1","ManaP2","MaxManaP2","ActivePlayer","OtherPlayer","Attacker"],"gameVariableValues":["30","30","0","0","0","0","P1","P2","0"],"cardsets":[],"rulesets":[{"rulesetID":"Main","description":"","turnStructure":"Main","rulesetVariableNames":[],"rulesetVariableValues":[],"matchRules":[{"ruleID":"InitialSetup","tags":"","trigger":"OnMatchStarted","condition":"","commands":"AddTagToCard(c(z:Deck&P1),P1);\nAddTagToCard(c(z:Deck&P2),P2);\nMoveCardToZone(c(z:Deck&P1,x:3),z(t:Hand&P1));\nMoveCardToZone(c(z:Deck&P2,x:3),z(t:Hand&P2))","elseCommands":""},{"ruleID":"DrawCard","tags":"","trigger":"OnTurnStarted","condition":"$turnNumber>1","commands":"MoveCardToZone(c(z:Deck&$ActivePlayer,x:1),z(t:Hand&$ActivePlayer))","elseCommands":""},{"ruleID":"TurnSetup","tags":"","trigger":"OnTurnStarted","condition":"","commands":"SetVariable(MaxMana$ActivePlayer,+1);\nSetVariable(Mana$ActivePlayer,$MaxMana$ActivePlayer);\nAddTagToCard(c(z:Play&$ActivePlayer),CanBeUsed);\nAddTagToCard(c(z:Play&$ActivePlayer),CanAttack);\nAddTagToCard(c(z:Hand&$ActivePlayer,f:Cost<=Mana$ActivePlayer),CanBeUsed)","elseCommands":""},{"ruleID":"PlayMinion","tags":"","trigger":"OnZoneUsed","condition":"$usedZone=z(t:Play&ActivePlayer) & $usedCard=c(z:Hand,t:Minion&CanBeUsed)","commands":"SetVariable(Mana$ActivePlayer,+-cf(Cost,i:$usedCard));\nMoveCardToZone(c(i:$usedCard),z(i:$usedZone));\nRemoveTagFromCard(c(i:$usedCard),CanBeUsed);\nAddTagToCard(c(i:$usedCard),JustSummoned);\nSendMessage(CardPlayed)","elseCommands":""},{"ruleID":"SetAttacker","tags":"","trigger":"OnCardUsed","condition":"$usedCard=c(z:Play&$ActivePlayer,t:Minion&CanAttack)","commands":"SetVariable(Attacker,$usedCard)","elseCommands":"SetVariable(Attacker,0)"},{"ruleID":"MinionAttack","tags":"","trigger":"OnZoneUsed","condition":"$usedZone=z(t:Face&$OtherPlayer) & $Attacker=$usedCard","commands":"RemoveTagFromCard(c(i:$Attacker),CanBeUsed);\nRemoveTagFromCard(c(i:$Attacker),CanAttack);\nSendMessage(MinionAttack);\nSetVariable(HP$OtherPlayer,+-cf(Attack,i:$Attacker));\nSetVariable(Attacker,0)","elseCommands":""},{"ruleID":"UpdateCanBePlayed","tags":"","trigger":"OnMessageSent","condition":"$message=CardPlayed","commands":"RemoveTagFromCard(c(z:Hand&$ActivePlayer),CanBeUsed);\nAddTagToCard(c(z:Hand&$ActivePlayer,f:Cost<=Mana$ActivePlayer),CanBeUsed)","elseCommands":""},{"ruleID":"UpdatePossibilities","tags":"","trigger":"OnMessageSent","condition":"nc(t:CanBeUsed)=0 & ($message=CardPlayed | $message=MinionAttack)","commands":"SendMessage(JobIsDone)","elseCommands":""},{"ruleID":"EndTurn","tags":"","trigger":"OnActionUsed","condition":"$actionName=EndTurn","commands":"EndCurrentPhase","elseCommands":""},{"ruleID":"ChangePlayer","tags":"","trigger":"OnTurnEnded","condition":"$ActivePlayer=P2","commands":"SetVariable(ActivePlayer,P1);\nSetVariable(OtherPlayer,P2)","elseCommands":"SetVariable(ActivePlayer,P2);\nSetVariable(OtherPlayer,P1)"},{"ruleID":"Cleanup","tags":"","trigger":"OnTurnEnded","condition":"","commands":"RemoveTagFromCard(allcards,CanBeUsed);\nRemoveTagFromCard(allcards,JustSummoned)","elseCommands":""}]}]}